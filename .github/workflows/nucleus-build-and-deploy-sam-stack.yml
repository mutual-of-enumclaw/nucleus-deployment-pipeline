name: SAM Build and Deploy
env:
  GITHUB_TOKEN: ${{ secrets.DEPLOY_USER_GITHUB_TOKEN }}
on:
  workflow_call:
    inputs:
      node-build-version:
        description: 'The version of node used in the build'
        required: false
        default: '20'
        type: string
      prebuild-command:
        description: 'Command to run before the build step'
        required: false
        type: string
      build-aws-access-key-id-name:
        description: 'The name of the secret containing the AWS access key ID used in the build step'
        required: false
        type: string
        default: 'NUCLEUS_SND_DEPLOY_USER_AWS_ACCESS_KEY_ID'
      build-aws-secret-access-key-name:
        description: 'The name of the secret containing the AWS secret access key used in the build step'
        required: false
        type: string
        default: 'NUCLEUS_SND_DEPLOY_USER_AWS_SECRET_ACCESS_KEY'

jobs:
  prepare:
    name: "Build and Test"
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: set node version
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-build-version}}

      - name: 'Create .npmrc'
        shell: bash
        run: |
            echo "Creating/Updating .npmrc in $PWD"
            # Create a new .npmrc if there isn't one there already
            [ ! -e .npmrc ] && echo "registry=https://moetech.jfrog.io/artifactory/api/npm/nucleus-npm/" > ~/.npmrc
            [ -e .npmrc ] && cp .npmrc ~/.npmrc && echo "" >> ~/.npmrc
            echo "//moetech.jfrog.io/artifactory/api/npm/nucleus-npm/:_authToken = ${{ secrets.JFROG_AUTH_TOKEN }}" >> ~/.npmrc
            echo "always-auth = true" >> ~/.npmrc

      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets[inputs.build-aws-access-key-id-name] }}
          aws-secret-access-key: ${{ secrets[inputs.build-aws-secret-access-key-name] }}
          aws-region: us-west-2

      - run: npm ci
      - run: npm run test:coverage --if-present

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Prebuild
        if: ${{ inputs.prebuild-command != '' }}
        run: ${{ inputs.prebuild-command }}

      - name: Build Package
        run: npm run build-package -- --environments ${{ vars.ENVIRONMENTS }}

      - name: Tar files
        run: tar -cvf build-artifacts.tar ${{ github.workspace }}

      - name: Archive build directory
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build-artifacts.tar
          retention-days: 30
  
  common-steps-job:
    uses: ./.github/workflows/common-steps.yml
    with:
      node-build-version: '20'  
      aws-access-key-id-name: ${{ inputs.build-aws-access-key-id-name }}
      aws-secret-access-key-name: ${{ inputs.build-aws-secret-access-key-name }}

    secrets:
      JFROG_AUTH_TOKEN: ${{ secrets.JFROG_AUTH_TOKEN }}

  deploy-snd-dev:
    name: Deploy snd and dev
    runs-on: ubuntu-latest
    needs: prepare
    strategy:
      matrix:
        stage: [snd, dev]
    environment:
      name: ${{ matrix.stage }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy
        run: |
          cd home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}
          npx samtsc --deploy-only --config-env ${{ matrix.stage }}

  deploy-tst:
    name: Deploy tst
    runs-on: ubuntu-latest
    needs: deploy-snd-dev
    environment:
      name: tst
      url: ${{ steps.deployment.outputs.environment_url }}
    steps:
      - name: Common Steps
        uses: ./.github/workflows/common-steps.yml
        with:
          node-build-version: ${{ inputs.node-build-version }}
          aws-access-key-id-name: ${{ inputs.build-aws-access-key-id-name }}
          aws-secret-access-key-name: ${{ inputs.build-aws-secret-access-key-name }}

      - name: Deploy
        run: |
          cd home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}
          npx samtsc --deploy-only --config-env tst

      - name: Wait for approval
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: deploy-approval

  deploy-acc:
    name: Deploy acc
    runs-on: ubuntu-latest
    needs: deploy-tst
    environment:
      name: acc
      url: ${{ steps.deployment.outputs.environment_url }}
    steps:
      - name: Common Steps
        uses: ./.github/workflows/common-steps.yml
        with:
          node-build-version: ${{ inputs.node-build-version }}
          aws-access-key-id-name: ${{ inputs.build-aws-access-key-id-name }}
          aws-secret-access-key-name: ${{ inputs.build-aws-secret-access-key-name }}

      - name: Deploy
        run: |
          cd home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}
          npx samtsc --deploy-only --config-env acc

      - name: Wait for approval
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: deploy-approval

  deploy-prd:
    name: Deploy prd
    runs-on: ubuntu-latest
    needs: deploy-acc
    environment:
      name: prd
      url: ${{ steps.deployment.outputs.environment_url }}
    steps:
      - name: Common Steps
        uses: ./.github/workflows/common-steps.yml
        with:
          node-build-version: ${{ inputs.node-build-version }}
          aws-access-key-id-name: ${{ inputs.build-aws-access-key-id-name }}
          aws-secret-access-key-name: ${{ inputs.build-aws-secret-access-key-name }}

      - name: Deploy
        run: |
          cd home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}
          npx samtsc --deploy-only --config-env prd

  