name: Nucleus reusable build and deploy SAM stack

on:
  workflow_call:
    inputs:
      node-build-version:
        description: 'The version of node used in the build'
        required: false
        default: '16'
        type: string
      region:
        description: 'AWS Region'
        required: true
        default: 'us-west-2'
        type: string
      environment_name:
        description: 'Environment Name'
        required: true
        default: 'snd'
        type: string
      archive_logs:
        description: 'Upload logs to artifacts'
        required: false
        default: 'false'
        type: string
      archive_build:
        description: 'Upload build to artifacts'
        required: false
        default: 'false'
        type: string
    secrets:
      JFROG_AUTH_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      MS_TEAMS_WEBHOOK_URI:
        required: false

jobs:
  deploy:
    name: Deploy stack to AWS
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: set node version
      uses: actions/setup-node@v2
      with:
        node-version: ${{ inputs.node-build-version}}

    - name: 'Create .npmrc'
      shell: bash
      run: |
          echo "Creating/Updating .npmrc in $PWD"
          # Create a new .npmrc if there isn't one there already
          [ ! -e .npmrc ] && echo "registry=https://moetech.jfrog.io/artifactory/api/npm/nucleus-npm/" > ~/.npmrc
          [ -e .npmrc ] && cp .npmrc ~/.npmrc && echo "" >> ~/.npmrc
          echo "_authToken = ${{ secrets.JFROG_AUTH_TOKEN }}" >> ~/.npmrc
          echo "always-auth = true" >> ~/.npmrc

    - name: Configure AWS credentials
      id: creds
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.region}}

    - run: npm ci

    - name: SAM Deploy
      # for each env template we would change this from default to match the variables in the sameconfig.toml section.
      run: npm run deploy -- --config-env ${{ inputs.environment_name }}
      
    - name: Microsoft Teams Deploy Card
      uses: jdcargile/ms-teams-notification@v1.3
      if: always()
      with:
        github-token: ${{ github.token }} # this will use the runner's token.
        ms-teams-webhook-uri: ${{ secrets.MS_TEAMS_WEBHOOK_URI }}
        notification-summary: Environment - ${{ inputs.environment_name }}
        notification-color: 17a2b8
        timezone: America/Los_Angeles

    - name: Archive npm logs
      uses: actions/upload-artifact@v3
      if:  ${{ always() && inputs.archive_logs == 'true' }}
      with:
        name: npm-logs
        path: /home/runner/.npm/_logs

    - name: Archive build directory
      uses: actions/upload-artifact@v3
      if:  ${{ always() && inputs.archive_build == 'true' }}
      with:
        name: build-artifacts
        path: .build/
